{"name": "测试数据：【 wintest4，True，0，查询成功 】", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcases.api_test.test_01_get_user_info.TestGetUserInfo object at 0x10b3f0fd0>, username = 'wintest4', except_result = True, except_code = 0, except_msg = '查询成功'\n\n    @allure.story(\"用例--获取某个用户信息\")\n    @allure.description(\"该用例是针对获取单个用户信息接口的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试数据：【 {username}，{except_result}，{except_code}，{except_msg} 】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"username, except_result, except_code, except_msg\",\n                             api_data[\"test_get_get_one_user_info\"])\n    def test_get_get_one_user_info(self, username, except_result, except_code, except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        step_2(username)\n>       result = get_one_user_info(username)\n\ntestcases/api_test/test_01_get_user_info.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \noperation/user.py:32: in get_one_user_info\n    if res.json()[\"code\"] == 0:\nvenv/lib/python3.8/site-packages/requests/models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x10a43f790>\ns = '<!DOCTYPE html><html><head><meta charset=utf-8><meta http-equiv=X-UA-Compatible content=\"IE=edge,chrome=1\"><meta name...><script src=/static/js/chunk-libs.bf168cb0.js></script><script src=/static/js/app.e3bbe613.js></script></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py:355: JSONDecodeError"}, "description": "该用例是针对获取单个用户信息接口的测试", "steps": [{"name": "步骤1 ==>> 获取某个用户信息", "status": "passed", "parameters": [{"name": "username", "value": "'wintest4'"}], "start": 1735908716946, "stop": 1735908716946}], "attachments": [{"name": "log", "source": "e296fefe-2934-47b7-a914-181105c896fc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6f5a5071-a4e4-4e19-be4c-df5039b69adb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'wintest4'"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_msg", "value": "'查询成功'"}], "start": 1735908716946, "stop": 1735908717007, "uuid": "6b404234-9e4b-416e-9415-41b65ac6e63d", "historyId": "54eb6e4c952e7dabd97db254a2223ed6", "testCaseId": "11ffae3263ffa61feddcb26de6c12bb7", "fullName": "testcases.api_test.test_01_get_user_info.TestGetUserInfo#test_get_get_one_user_info", "labels": [{"name": "feature", "value": "获取用户信息模块"}, {"name": "story", "value": "用例--获取某个用户信息"}, {"name": "severity", "value": "trivial"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_01_get_user_info"}, {"name": "subSuite", "value": "TestGetUserInfo"}, {"name": "host", "value": "zhouqideMBP.lan"}, {"name": "thread", "value": "4802-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_01_get_user_info"}], "links": [{"type": "test_case", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应BUG的链接地址"}]}