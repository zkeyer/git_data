{"name": "测试数据：【admin,admin123,3f580c31d49c4f8cab1636187cc50157,200,操作成功】", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcases.api_test.test_new_01_login.Test_new_User_login object at 0x108fbf6a0>, username = 'admin', password = 'admin123', uuid = '3f580c31d49c4f8cab1636187cc50157', except_code = 200\nexcept_msg = '操作成功'\n\n    @allure.story(\"用例--登陆用户\")\n    @allure.description(\"该用例是针对获取用户登陆时接口的测试\")\n    @allure.title(\"测试数据：【{username},{password},{uuid},{except_code},{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"username, password, uuid, except_code, except_msg\",api_data[\"test_new_User_login\"])\n    def test_user_login(self,username, password, uuid, except_code, except_msg):\n        logging.info(\"-------------开始执行用例-------------\")\n>       result = new_login_user(username,password,uuid)\n\ntestcases/api_test/test_new_01_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \noperation/user.py:92: in new_login_user\n    if res.json()[\"code\"] ==200:\nvenv/lib/python3.8/site-packages/requests/models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x107fc0790>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/json/decoder.py:355: JSONDecodeError"}, "description": "该用例是针对获取用户登陆时接口的测试", "attachments": [{"name": "log", "source": "2c8a45a6-b6fb-4812-a32a-c2f94d82aa86-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a6be71a1-1ed6-42c4-97d5-1acfd0f5714f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'admin'"}, {"name": "password", "value": "'admin123'"}, {"name": "uuid", "value": "'3f580c31d49c4f8cab1636187cc50157'"}, {"name": "except_code", "value": "200"}, {"name": "except_msg", "value": "'操作成功'"}], "start": 1735623711032, "stop": 1735623711587, "uuid": "a315fe32-e67c-4b75-be08-568bd30fe318", "historyId": "549dc06e3f5f74d17ea187c6da9b1112", "testCaseId": "a5474e3c0e9f8212457cfbfbc163042f", "fullName": "testcases.api_test.test_new_01_login.Test_new_User_login#test_user_login", "labels": [{"name": "story", "value": "用例--登陆用户"}, {"name": "epic", "value": "针对单个接口测试"}, {"name": "severity", "value": "normal"}, {"name": "feature", "value": "用户登陆模块"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_new_01_login"}, {"name": "subSuite", "value": "Test_new_User_login"}, {"name": "host", "value": "zhouqideMBP.lan"}, {"name": "thread", "value": "68918-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_new_01_login"}]}